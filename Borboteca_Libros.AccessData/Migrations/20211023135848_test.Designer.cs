// <auto-generated />
using System;
using Borboteca_Libros.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Borboteca_Libros.AccessData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211023135848_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genero");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Novela"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Terror"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Comedia"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Ficción"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Aventura"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Suspenso"
                        });
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Libro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaDePublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pach")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Resenia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.LibroGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<Guid>("LibroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroGenero");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Libro", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Autor", "Autor")
                        .WithMany("Libro")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.LibroGenero", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Genero", "Genero")
                        .WithMany("LibroGenero")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borboteca_Libros.Domain.Entities.Libro", "Libro")
                        .WithMany("LibroGenero")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Autor", b =>
                {
                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Genero", b =>
                {
                    b.Navigation("LibroGenero");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Libro", b =>
                {
                    b.Navigation("LibroGenero");
                });
#pragma warning restore 612, 618
        }
    }
}
