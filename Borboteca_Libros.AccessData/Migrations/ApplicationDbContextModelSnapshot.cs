// <auto-generated />
using System;
using Borboteca_Libros.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Borboteca_Libros.AccessData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoAutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAutor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Usuarioid")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Carro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.CarroLibro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Carroid")
                        .HasColumnType("int");

                    b.Property<int>("libroid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Carroid");

                    b.HasIndex("libroid");

                    b.ToTable("CarroLibro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Favoritos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LibrosId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibrosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaDePublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pach")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Receña")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Roll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Roll");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RollId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RollId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Ventas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarroId")
                        .HasColumnType("int");

                    b.Property<string>("Comprobante")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Carro", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.CarroLibro", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("Carroid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borboteca_Libros.Domain.Entities.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("libroid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Favoritos", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Libro", "Libros")
                        .WithMany()
                        .HasForeignKey("LibrosId");

                    b.HasOne("Borboteca_Libros.Domain.Entities.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId");

                    b.Navigation("Libros");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Libro", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Usuarios", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Roll", "Roll")
                        .WithMany()
                        .HasForeignKey("RollId");

                    b.Navigation("Roll");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Ventas", b =>
                {
                    b.HasOne("Borboteca_Libros.Domain.Entities.Carro", "Carro")
                        .WithMany("Ventas")
                        .HasForeignKey("CarroId");

                    b.Navigation("Carro");
                });

            modelBuilder.Entity("Borboteca_Libros.Domain.Entities.Carro", b =>
                {
                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
